# Server Configuration
PORT=5000
NODE_ENV=development

# MongoDB Configuration
MONGODB_URI=mongodb://localhost:27017/media-gallery
# For production: mongodb+srv://username:password@cluster.mongodb.net/media-gallery

# JWT Configuration
JWT_SECRET=your-super-secret-jwt-key-change-this-in-production
JWT_EXPIRES_IN=7d

# Google OAuth Configuration
# Replace these with your actual Google OAuth credentials from Google Cloud Console
# 1. Go to https://console.cloud.google.com/
# 2. Create a project and enable Google+ API
# 3. Go to Credentials → Create Credentials → OAuth 2.0 Client IDs
# 4. Set Application type to "Web application"
# 5. Add Authorized JavaScript origins: http://localhost:3000
# 6. Add Authorized redirect URIs: http://localhost:5000/api/auth/google/callback
GOOGLE_CLIENT_ID=your-google-client-id-here
GOOGLE_CLIENT_SECRET=your-google-client-secret-here

# Email Configuration (Gmail)
# Replace with your actual Gmail credentials
# Enable 2-factor authentication and generate App Password
EMAIL_HOST=smtp.gmail.com
EMAIL_PORT=587
EMAIL_USER=your-email@gmail.com
EMAIL_PASS=your-app-password-here

# OTP Configuration
OTP_EXPIRY_MINUTES=10
LOGIN_ATTEMPTS_LIMIT=5
ACCOUNT_LOCKOUT_DURATION_HOURS=2

# File Upload Configuration
MAX_FILE_SIZE=5242880
ALLOWED_FILE_TYPES=image/jpeg,image/png,image/gif,image/webp
UPLOAD_PATH=uploads

# Cloudinary Configuration (Optional - for cloud storage)
# CLOUDINARY_CLOUD_NAME=your-cloud-name
# CLOUDINARY_API_KEY=your-api-key
# CLOUDINARY_API_SECRET=your-api-secret

# CORS Configuration
CORS_ORIGIN=http://localhost:3000

# Rate Limiting
RATE_LIMIT_WINDOW_MS=900000
RATE_LIMIT_MAX_REQUESTS=100 